<?xml version="1.0" encoding="UTF-8"?>
<pmd>
    <useProjectRuleSet>false</useProjectRuleSet>
    <excludePatterns/>
    <includePatterns/>
    <rules>
        <rule>
            <name>CheckResultSet</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>OptimizableToArrayCall</name>
            <ruleset>Performance</ruleset>
        </rule>
        <rule>
            <name>ImmutableField</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>UseUtilityClass</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>TooFewBranchesForASwitchStatement</name>
            <ruleset>Performance</ruleset>
        </rule>
        <rule>
            <name>BigIntegerInstantiation</name>
            <ruleset>Performance</ruleset>
        </rule>
        <rule>
            <name>AccessorMethodGeneration</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>DefaultLabelNotLastInSwitchStmt</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>UseCollectionIsEmpty</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>AbstractClassWithoutAbstractMethod</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>AvoidUsingHardCodedIP</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>PreserveStackTrace</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>SwitchStmtsShouldHaveDefault</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>UseVarargs</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>AvoidReassigningParameters</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>AccessorClassGeneration</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>ConstantsInInterface</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>AvoidBranchingStatementAsLastInLoop</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>AvoidDecimalLiteralsInBigDecimalConstructor</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>AvoidMultipleUnaryOperators</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>AvoidUsingOctalValues</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>BrokenNullCheck</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>CheckSkipResult</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>ClassCastExceptionWithToArray</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>DontUseFloatTypeForLoopIndices</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>JumbledIncrementer</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>MisplacedNullCheck</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>OverrideBothEqualsAndHashcode</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>ReturnFromFinallyBlock</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>UnconditionalIfStatement</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>AvoidThreadGroup</name>
            <ruleset>Multithreading</ruleset>
        </rule>
        <rule>
            <name>DontCallThreadRun</name>
            <ruleset>Multithreading</ruleset>
        </rule>
        <rule>
            <name>DoubleCheckedLocking</name>
            <ruleset>Multithreading</ruleset>
        </rule>
        <rule>
            <name>ExtendsObject</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>ForLoopShouldBeWhileLoop</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>CollapsibleIfStatements</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>SimplifiedTernary</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>CyclomaticComplexity</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>ExcessiveClassLength</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>ExcessiveMethodLength</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>ExcessiveParameterList</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>ExcessivePublicCount</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>NcssCount</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>NPathComplexity</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>TooManyFields</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>TooManyMethods</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AssignmentInOperand</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>AvoidAccessibilityAlteration</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>AvoidLiteralsInIfCondition</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>DoNotCallGarbageCollectionExplicitly</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>DontImportSun</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>NullAssignment</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>SuspiciousOctalEscape</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>AtLeastOneConstructor</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>AvoidUsingNativeCode</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>CallSuperInConstructor</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>OnlyOneReturn</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>UnnecessaryConstructor</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>AvoidUsingVolatile</name>
            <ruleset>Multithreading</ruleset>
        </rule>
        <rule>
            <name>UseConcurrentHashMap</name>
            <ruleset>Multithreading</ruleset>
        </rule>
        <rule>
            <name>UseObjectForClearerAPI</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>UnnecessaryParentheses</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>AbstractClassWithoutAnyMethod</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AvoidDeeplyNestedIfStmts</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>ClassWithOnlyPrivateConstructorsShouldBeFinal</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>DataClass</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>FinalFieldCouldBeStatic</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>GodClass</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>LogicInversion</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>SimplifyBooleanExpressions</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>SimplifyBooleanReturns</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>SimplifyConditional</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>SingularField</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>SwitchDensity</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AssignmentToNonFinalStatic</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>AvoidInstanceofChecksInCatchClause</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>CloseResource</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>CompareObjectsWithEquals</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>ConstructorCallsOverridableMethod</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>EqualsNull</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>IdempotentOperations</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>InstantiationToGetClass</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>MissingStaticMethodInNonInstantiatableClass</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>NonCaseLabelInSwitchStatement</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>NonStaticInitializer</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>SimpleDateFormatNeedsLocale</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>SingleMethodSingleton</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>SingletonClassReturningNewInstance</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>UseLocaleWithCaseConversions</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>AvoidProtectedFieldInFinalClass</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>AvoidProtectedMethodInFinalClassNotExtending</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>ConfusingTernary</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>EmptyMethodInAbstractClassShouldBeAbstract</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>FieldDeclarationsShouldBeAtStartOfClass</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>UnnecessaryLocalBeforeReturn</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>AvoidSynchronizedAtMethodLevel</name>
            <ruleset>Multithreading</ruleset>
        </rule>
        <rule>
            <name>NonThreadSafeSingleton</name>
            <ruleset>Multithreading</ruleset>
        </rule>
        <rule>
            <name>UseNotifyAllInsteadOfNotify</name>
            <ruleset>Multithreading</ruleset>
        </rule>
        <rule>
            <name>UncommentedEmptyConstructor</name>
            <ruleset>Documentation</ruleset>
        </rule>
        <rule>
            <name>UncommentedEmptyMethodBody</name>
            <ruleset>Documentation</ruleset>
        </rule>
        <rule>
            <name>AvoidFieldNameMatchingMethodName</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>AvoidFieldNameMatchingTypeName</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>MethodWithSameNameAsEnclosingClass</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>SuspiciousEqualsMethodName</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>SuspiciousHashcodeMethodName</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>AvoidDollarSigns</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>BooleanGetMethodName</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>ClassNamingConventions</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>GenericsNaming</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>LongVariable</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>MethodNamingConventions</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>NoPackage</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>PackageCase</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>ShortClassName</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>ShortMethodName</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>ShortVariable</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>AvoidCatchingNPE</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>AvoidCatchingThrowable</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>AvoidLosingExceptionInformation</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>DoNotThrowExceptionInFinally</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>AvoidCatchingGenericException</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AvoidRethrowingException</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AvoidThrowingNewInstanceOfSameException</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AvoidThrowingNullPointerException</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AvoidThrowingRawExceptionTypes</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>DoNotExtendJavaLangError</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>ExceptionAsFlowControl</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>SignatureDeclareThrowsException</name>
            <ruleset>Design</ruleset>
        </rule>
    </rules>
    <includeDerivedFiles>false</includeDerivedFiles>
    <violationsAsErrors>true</violationsAsErrors>
    <fullBuildEnabled>true</fullBuildEnabled>
</pmd>
